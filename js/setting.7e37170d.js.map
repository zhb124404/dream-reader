{"version":3,"sources":["webpack:///./src/views/Setting.vue?08fb","webpack:///src/views/Setting.vue","webpack:///./src/views/Setting.vue?3e53","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/selectable/index.ts","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///./src/views/Setting.vue","webpack:///../../../src/directives/touch/index.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","model","value","callback","$$v","useDarkTheme","expression","staticRenderFns","data","computed","get","$store","state","theme","useDarktheme","set","$vuetify","dark","commit","methods","name","directives","ripple","props","type","Boolean","default","genRipple","center","valueComparator","e","mixins","prop","event","id","inputValue","falseValue","trueValue","multiple","label","String","hasColor","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","undefined","isDirty","rippleState","watch","genLabel","VInput","click","prevent","genInput","Object","disabled","role","domProps","checked","on","blur","change","focus","keydown","ref","onBlur","onClick","onChange","length","onFocus","onKeydown","Touch","inset","loading","flat","classes","validationState","hasError","switchData","setTextColor","class","themeClasses","genDefaultSlot","genSwitch","attrs$","left","right","onSwipeRight","genProgress","$slots","progress","VProgressCircular","color","size","width","indeterminate","onSwipeLeft","component","VSwitch","handleGesture","wrapper","touchendY","dirRatio","minDistance","touchendX","Math","touchstartX","touchstartY","touch","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","up","down","start","move","end","touchstart","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind"],"mappings":"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","file":"js/setting.7e37170d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"setting\"},[_c('v-switch',{attrs:{\"primary\":\"\",\"label\":\"启用暗黑主题\"},model:{value:(_vm.useDarkTheme),callback:function ($$v) {_vm.useDarkTheme=$$v},expression:\"useDarkTheme\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"setting\">\n    <v-switch v-model=\"useDarkTheme\" primary label=\"启用暗黑主题\"></v-switch>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {}\n  },\n  computed: {\n    useDarkTheme: {\n      get() {\n        return this.$store.state.theme.useDarktheme\n      },\n      set(value) {\n        this.$vuetify.theme.dark = value\n        this.$store.commit('setTheme', { useDarktheme: value })\n      }\n    }\n  },\n  methods: {}\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js&\"","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./Setting.vue?vue&type=template&id=7bc02e24&\"\nimport script from \"./Setting.vue?vue&type=script&lang=js&\"\nexport * from \"./Setting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VSwitch } from 'vuetify/lib/components/VSwitch';\ninstallComponents(component, {VSwitch})\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n"],"sourceRoot":""}